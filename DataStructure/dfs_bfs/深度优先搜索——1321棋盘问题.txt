
// 棋盘问题 poj1321

#include <iostream>

using namespace std;

char board[10][10];
int column[100];
int ans = 0;
int counts = 0;

void initBoard(int size){
    for (int i = 0; i < size; ++i){
        for (int j = 0; j < size; ++j){
            cin >> board[i][j];
            if (board[i][j] == '#'){
                counts++;
            }
        }
    }
}

void dfs(int row , int k, int size){   //

    if (k > counts )
        return;
    if (k == 0){
        ans++;
        return;
    }

    for (int i = row; i < size ; ++i){   // start from this row
        for (int j = 0; j < size ; ++j){
            if (board[i][j] == '#' && column[j] == 0 ){
                column[j] = 1;         // column j can not put chessman
                dfs(i + 1, k - 1, size); // row i has been traversal, start from row i+1
                column[j] = 0;         // back trace
            }
        }
    }
}

int main (){

    while (1){
        int n, k;
        cin >> n;  // size of the board, row and column
        cin >> k; // number of chessmen

        if (n == -1 && k == -1)
            break; // stop input

        initBoard(n);

        dfs(0, k, n);
        cout << ans << endl;
        ans =0;
    }

}