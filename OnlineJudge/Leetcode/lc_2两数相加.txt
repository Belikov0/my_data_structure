/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {  // 20ms, 69.5Mb
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode(0);
        ListNode* node = ans;
        int thisNum;

        while (l1 != nullptr || l2 != nullptr ){
            
            if (l1 == nullptr && l2 !=nullptr){
                l1 = new ListNode(0);
            }
            if (l1 != nullptr && l2 ==nullptr){
                l2 = new ListNode(0);
            }
            thisNum = l1->val + l2->val + node->val;    

            node->val = thisNum%10;

            if (thisNum < 10 && l1->next == nullptr && l2->next == nullptr)
                return ans;
            else{
                node->next = new ListNode(thisNum/10);
                node = node->next;
                l1 = l1->next;
                l2 = l2->next;
            }
            
        }
        return ans;
    }
};